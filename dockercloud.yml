cars:
  entrypoint: './wait-for-it.sh cars-db:27017 etcd0:4001 rabbitmq:5672 -s -- npm start'
  environment:
    - BROCKER_HOST=rabbitmq
    - DBSOURCE_HOST=cars-db
    - ETCD_HOST=etcd0
  image: 'aksenchyk/fm-cars:latest'
  restart: always
  target_num_containers: 2
cars-db:
  image: 'mongo:latest'
  restart: always
dashboard:
  entrypoint: './wait-for-it.sh redis:6379 -s -- npm start -- p 5601 --link gateway:3001'
  environment:
    - REDIS_HOST=redis
  image: 'aksenchyk/200loc-dashboard:latest'
  ports:
    - '5601:5601'
etcd0:
  command: '--name etcd0 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -advertise-client-urls http://etcd0:2379,http://etcd0:4001 -initial-advertise-peer-urls http://etcd0:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token etcd-cluster-1 -initial-cluster etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380 -initial-cluster-state new'
  image: 'quay.io/coreos/etcd:v2.3.7'
etcd1:
  command: '--name etcd1 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -advertise-client-urls http://etcd1:2379,http://etcd1:4001 -initial-advertise-peer-urls http://etcd1:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token etcd-cluster-1 -initial-cluster etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380 -initial-cluster-state new'
  image: 'quay.io/coreos/etcd:v2.3.7'
etcd2:
  command: '--name etcd2 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -advertise-client-urls http://etcd2:2379,http://etcd2:4001 -initial-advertise-peer-urls http://etcd2:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token etcd-cluster-1 -initial-cluster etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380 -initial-cluster-state new'
  image: 'quay.io/coreos/etcd:v2.3.7'
gateway:
  entrypoint: './wait-for-it.sh redis:6379 mongo:27017 dashboard:5601 -s -- npm start -- --p 3001'
  environment:
    - 'DEBUG=gateway,plugins:*'
    - MONGO_HOST=mongo
    - REDIS_HOST=redis
  image: 'aksenchyk/fm-200loc:latest'
  ports:
    - '3001:3001'
  target_num_containers: 2
image:
  entrypoint: './wait-for-it.sh cars-db:27017 etcd0:4001 rabbitmq:5672 -s -- npm start'
  environment:
    - AWS_ACCESS_KEY=xxxxxxxxxxxxxxxxxxxxxx
    - AWS_SECRET_KEY=xxxxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxx
    - BROCKER_HOST=rabbitmq
    - ETCD_HOST=etcd0
  image: 'aksenchyk/fm-image:latest'
  restart: always
letsencrypt:
  environment:
    - DOMAINS=aksenchyk.com www.aksenchyk.com
    - EMAIL=aksenchyk.v@gmail.com
  image: 'aksenchyk/fm-letsencrypt:latest'
  restart: always
  volumes:
    - /var/lib/letsencrypt
    - /etc/letsencrypt
mongo:
  image: 'mongo:latest'
nginx:
  autoredeploy: true
  entrypoint: './wait-for-it.sh gateway:3001 web:3000 -s -- /start.sh'
  environment:
    - DOMAIN_NAME=aksenchyk.com
    - GATEWAY_SERVER_HOST=gateway
    - GATEWAY_SERVER_PORT=3001
    - LETSENCRYPT_HOST=letsencrypt
    - LETSENCRYPT_PORT=80
    - WEBROOT_PATH=/etc/letsencrypt
    - WEB_SERVER_HOST=web
    - WEB_SERVER_PORT=3000
  image: 'aksenchyk/fm-nginx:latest'
  ports:
    - '80:80'
    - '443:443'
  restart: always
  volumes_from:
    - letsencrypt
profile:
  entrypoint: './wait-for-it.sh profile-db:27017 etcd0:4001 rabbitmq:5672 -s -- npm start'
  environment:
    - BROCKER_HOST=rabbitmq
    - DBSOURCE_HOST=profile-db
    - ETCD_HOST=etcd0
  image: 'aksenchyk/fm-profile:latest'
  restart: always
profile-db:
  image: 'mongo:latest'
  restart: always
rabbitmq:
  image: 'rabbitmq:latest'
  restart: always
redis:
  image: 'redis:latest'
tracker:
  entrypoint: './wait-for-it.sh etcd0:4001 rabbitmq:5672 -s -- npm start'
  environment:
    - BROCKER_HOST=rabbitmq
    - ETCD_HOST=etcd0
  image: 'aksenchyk/fm-tracker:latest'
  restart: always
web:
  entrypoint: './wait-for-it.sh etcd0:4001 -s -- npm start'
  environment:
    - ETCD_HOST=etcd0
    - HTTP_PORT=3000
  image: 'aksenchyk/fm-web:latest'
  restart: always
  target_num_containers: 2
