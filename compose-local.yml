version: '2'
services:

  #--------- gateway   -----------------#
  #--------- to use it without nginx add '/' path directed to web server ----------#
  gateway:
    image: aksenchyk/fm-200loc:build
    ports:
     - "3001:3001"     
    environment:        
     - HTTP_PORT=3001
     - MONGO_HOST=profile-db
     - REDIS_HOST=redis
     - DEBUG=gateway,plugins:*
    depends_on:
     - profile-db
     - redis
    entrypoint: ./wait-for-it.sh profile-db:27017 redis:6379 -s -- npm run dev  

  dashboard:
    entrypoint: './wait-for-it.sh redis:6379 -s -- npm start -- p 5601 --link gateway:3001'
    environment:
      - REDIS_HOST=redis
    image: 'aksenchyk/200loc-dashboard:build'
    ports:
      - '5601:5601'  
  #------------------------------------#


  #------- databases ------------------#
  #------------------------------------#
  cars-db:    
    image: mongo
  #------------------------------------#
  profile-db:    
    image: mongo
  #-------gateway persistance----------# 
  redis:
    image: 'redis:latest'
  #------------------------------------#


  #-------- microservices  ------------#
  #------------------------------------#
  cars:    
    image: aksenchyk/fm-cars:build
    depends_on:
      - cars-db
      - etcd
      - rabbitmq    
    environment:
      - HTTP_PORT=3002  
      - DBSOURCE_HOST=cars-db
      - BROCKER_HOST=rabbitmq
      - ETCD_HOST=etcd    
    entrypoint: ./wait-for-it.sh cars-db:27017 etcd:4001 rabbitmq:5672 -s -- npm run dev
    restart: always  
  #------------------------------------#  
  profile:
    image: aksenchyk/fm-profile:build      
    depends_on:      
      - etcd
      - rabbitmq
      - profile-db
    environment: 
      - HTTP_PORT=3003
      - DBSOURCE_HOST=profile-db
      - ETCD_HOST=etcd
      - BROCKER_HOST=rabbitmq
    entrypoint: ./wait-for-it.sh profile-db:27017 etcd:4001 rabbitmq:5672 -s -- npm run dev    
    restart: always
  #------------------------------------#
  tracker:    
    image: aksenchyk/fm-tracker:build  
    depends_on:      
      - etcd
      - rabbitmq     
    environment: 
      - HTTP_PORT=3004       
      - ETCD_HOST=etcd
      - BROCKER_HOST=rabbitmq
    entrypoint: ./wait-for-it.sh etcd:4001 rabbitmq:5672 -s -- npm run dev
    restart: always
  #------------------------------------# 
  image:    
    image: aksenchyk/fm-image:build  
    depends_on:      
      - etcd
      - rabbitmq      
    environment: 
      - HTTP_PORT=3005        
      - ETCD_HOST=etcd
      - BROCKER_HOST=rabbitmq
      - AWS_ACCESS_KEY=xxxxxxx
      - AWS_SECRET_KEY=xxxxxxxxx+xxxxxxxxxxxxxxxxxxxxxxxx
    entrypoint: ./wait-for-it.sh etcd:4001 rabbitmq:5672 -s -- npm run dev     
    restart: always    
  #------------------------------------#


  #-------- web client ----------------#
  web:
    image: aksenchyk/fm-web:build  
    depends_on:      
      - etcd
    environment:
      - ETCD_HOST=etcd
      - HTTP_PORT=3000 
    entrypoint: ./wait-for-it.sh etcd:4001 -s -- npm start
    restart: always  
  #------------------------------------#



  #------- logical group  -------------#
  #------------------------------------# 
  etcd:
    command: '--name etcd -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -advertise-client-urls http://127.0.0.1:2379,http://127.0.0.1:4001'
    image: 'quay.io/coreos/etcd:v2.3.7'
    ports:
     - '2379:2379'
     - '4001:4001'
   
  #------------------------------------# 
  rabbitmq:    
    image: rabbitmq:latest
    ports:
     - '5672:5672'
     - '15672:15672'
     - '1883:1883'
  #------------------------------------#
